{"uid":"edd71b303865c64d","name":"Сравнение ответа API с эталонным JSON","fullName":"tests.test_compare.TestCompareJSON#test_compare_json_response","historyId":"5914e5b668d67363e06161e608241804","time":{"start":1745409198237,"stop":1745409199995,"duration":1758},"description":"Отправляем POST-запрос и сравниваем JSON-ответ с локальным файлом response.json","descriptionHtml":"<p>Отправляем POST-запрос и сравниваем JSON-ответ с локальным файлом response.json</p>\n","status":"failed","statusMessage":"AssertionError: JSON ответы не совпадают, см. различия во вложении\nassert False","statusTrace":"self = <test_compare.TestCompareJSON object at 0x7fcf5500c4d0>\n\n    @allure.title(\"Сравнение ответа API с эталонным JSON\")\n    @allure.description(\"Отправляем POST-запрос и сравниваем JSON-ответ с локальным файлом response.json\")\n    def test_compare_json_response(self):\n        url = \"https://k3s-sier.evolenta.tech/authorize\"\n        payload = {\n            \"login\": \"pankratov\",\n            \"password\": \"0pFAYSGJ0\"\n        }\n    \n        with allure.step(\"POST-запрос к API\"):\n            response = requests.post(url, data=payload)\n            allure.attach(f\"Статус код ответа: {response.status_code}\", name=\"Статус код\", attachment_type=allure.attachment_type.TEXT)\n            assert response.status_code == 200, f\"Статус код не 200: {response.status_code}\"\n    \n        with allure.step(\"Загрузка эталонного JSON\"):\n            test_dir = os.path.dirname(os.path.abspath(__file__))  # исправлено с file на file\n            response_path = os.path.join(test_dir, \"response.json\")\n    \n            assert os.path.exists(response_path), f\"Файл не найден: {response_path}\"\n    \n            with open(response_path, \"r\", encoding=\"utf-8\") as f:\n                expected_response = json.load(f)\n    \n        with allure.step(\"Сравнение JSON-ответов\"):\n            actual_response = response.json()\n            diff = DeepDiff(expected_response, actual_response, ignore_order=True)\n    \n            if diff:\n                # Сохраняем только важные различия\n                differences = json.dumps(diff, indent=4, ensure_ascii=False)\n                allure.attach(differences, name=\"Различия JSON\", attachment_type=allure.attachment_type.TEXT)\n>               assert False, \"JSON ответы не совпадают, см. различия во вложении\"\nE               AssertionError: JSON ответы не совпадают, см. различия во вложении\nE               assert False\n\ntests/test_compare.py:41: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"Отправляем POST-запрос и сравниваем JSON-ответ с локальным файлом response.json","status":"failed","statusMessage":"AssertionError: JSON ответы не совпадают, см. различия во вложении\nassert False","statusTrace":"self = <test_compare.TestCompareJSON object at 0x7fcf5500c4d0>\n\n    @allure.title(\"Сравнение ответа API с эталонным JSON\")\n    @allure.description(\"Отправляем POST-запрос и сравниваем JSON-ответ с локальным файлом response.json\")\n    def test_compare_json_response(self):\n        url = \"https://k3s-sier.evolenta.tech/authorize\"\n        payload = {\n            \"login\": \"pankratov\",\n            \"password\": \"0pFAYSGJ0\"\n        }\n    \n        with allure.step(\"POST-запрос к API\"):\n            response = requests.post(url, data=payload)\n            allure.attach(f\"Статус код ответа: {response.status_code}\", name=\"Статус код\", attachment_type=allure.attachment_type.TEXT)\n            assert response.status_code == 200, f\"Статус код не 200: {response.status_code}\"\n    \n        with allure.step(\"Загрузка эталонного JSON\"):\n            test_dir = os.path.dirname(os.path.abspath(__file__))  # исправлено с file на file\n            response_path = os.path.join(test_dir, \"response.json\")\n    \n            assert os.path.exists(response_path), f\"Файл не найден: {response_path}\"\n    \n            with open(response_path, \"r\", encoding=\"utf-8\") as f:\n                expected_response = json.load(f)\n    \n        with allure.step(\"Сравнение JSON-ответов\"):\n            actual_response = response.json()\n            diff = DeepDiff(expected_response, actual_response, ignore_order=True)\n    \n            if diff:\n                # Сохраняем только важные различия\n                differences = json.dumps(diff, indent=4, ensure_ascii=False)\n                allure.attach(differences, name=\"Различия JSON\", attachment_type=allure.attachment_type.TEXT)\n>               assert False, \"JSON ответы не совпадают, см. различия во вложении\"\nE               AssertionError: JSON ответы не совпадают, см. различия во вложении\nE               assert False\n\ntests/test_compare.py:41: AssertionError","steps":[{"name":"POST-запрос к API","time":{"start":1745409198237,"stop":1745409199987,"duration":1750},"status":"passed","steps":[],"attachments":[{"uid":"41656141f026aca5","name":"Статус код","source":"41656141f026aca5.txt","type":"text/plain","size":37}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"Загрузка эталонного JSON","time":{"start":1745409199987,"stop":1745409199987,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Сравнение JSON-ответов","time":{"start":1745409199987,"stop":1745409199995,"duration":8},"status":"failed","statusMessage":"AssertionError: JSON ответы не совпадают, см. различия во вложении\nassert False\n","statusTrace":"  File \"/home/runner/work/auth/auth/tests/test_compare.py\", line 41, in test_compare_json_response\n    assert False, \"JSON ответы не совпадают, см. различия во вложении\"\n","steps":[],"attachments":[{"uid":"f479e4ac59582472","name":"Различия JSON","source":"f479e4ac59582472.txt","type":"text/plain","size":1370}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true},"afterStages":[],"labels":[{"name":"suite","value":"Сравнение JSON-ответа с эталонным"},{"name":"parentSuite","value":"tests"},{"name":"subSuite","value":"TestCompareJSON"},{"name":"host","value":"fv-az1718-152"},{"name":"thread","value":"2285-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_compare"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"edd71b303865c64d.json","parameterValues":[]}